import * as TaroComponents from '@tarojs/components';
import Taro from '@tarojs/taro';
import * as React from 'react';
import * as ReactDOM from 'react-dom';
import * as _ from 'lodash';
import * as TaroUI from 'taro-ui';
import type { JSXElementConstructor } from 'react';
import 'taro-ui/dist/style/index.scss'; // 全局引入一次即可

/**
 * Taro H5底层很奇怪，兼容 weapp 的 api 并不是直接挂载在 Taro 上，
 * 但是在写代码又可以「Taro.xxx」访问，原因是编译的时候处理了。所以
 * 通过注册全局变量的方式提供 Taro 是不行了，会缺少微信小程序的兼容 api
 * 以下是 H5 兼容的小程序 API
 */
const weappApi = {
  saveFile: Taro.saveFile,
  getSavedFileList: Taro.getSavedFileList,
  getSavedFileInfo: Taro.getSavedFileInfo,
  getFileInfo: Taro.getFileInfo,
  removeSavedFile: Taro.removeSavedFile,
  requirePrivacyAuthorize: Taro.requirePrivacyAuthorize,
  onNeedPrivacyAuthorization: Taro.onNeedPrivacyAuthorization,
  getPrivacySetting: Taro.getPrivacySetting,
  openPrivacyContract: Taro.openPrivacyContract,
  setStorage: Taro.setStorage,
  setStorageSync: Taro.setStorageSync,
  batchSetStorage: Taro.batchSetStorage,
  batchSetStorageSync: Taro.batchSetStorageSync,
  getStorage: Taro.getStorage,
  getStorageSync: Taro.getStorageSync,
  batchGetStorage: Taro.batchGetStorage,
  batchGetStorageSync: Taro.batchGetStorageSync,
  getStorageInfo: Taro.getStorageInfo,
  getStorageInfoSync: Taro.getStorageInfoSync,
  removeStorage: Taro.removeStorage,
  removeStorageSync: Taro.removeStorageSync,
  clearStorage: Taro.clearStorage,
  clearStorageSync: Taro.clearStorageSync,
  createCanvasContext: Taro.createCanvasContext,
  canvasToTempFilePath: Taro.canvasToTempFilePath,
  canvasGetImageData: Taro.canvasGetImageData,
  canvasPutImageData: Taro.canvasPutImageData,
  createOffscreenCanvas: Taro.createOffscreenCanvas,
  getAccountInfoSync: Taro.getAccountInfoSync,
  getShareInfo: Taro.getShareInfo,
  authPrivateMessage: Taro.authPrivateMessage,
  pageScrollTo: Taro.pageScrollTo,
  chooseInvoiceTitle: Taro.chooseInvoiceTitle,
  chooseInvoice: Taro.chooseInvoice,
  openCustomerServiceChat: Taro.openCustomerServiceChat,
  openStickerSetView: Taro.openStickerSetView,
  openSingleStickerView: Taro.openSingleStickerView,
  openStickerIPView: Taro.openStickerIPView,
  createAudioContext: Taro.createAudioContext,
  createVideoContext: Taro.createVideoContext,
  createMapContext: Taro.createMapContext,
  createLivePlayerContext: Taro.createLivePlayerContext,
  arrayBufferToBase64: Taro.arrayBufferToBase64,
  base64ToArrayBuffer: Taro.base64ToArrayBuffer,
  openSetting: Taro.openSetting,
  getExtConfig: Taro.getExtConfig,
  chooseMedia: Taro.chooseMedia,
  previewMedia: Taro.previewMedia,
  chooseMessageFile: Taro.chooseMessageFile,
  getExtConfigSync: Taro.getExtConfigSync,
  showShareMenu: Taro.showShareMenu,
  hideShareMenu: Taro.hideShareMenu,
  updateShareMenu: Taro.updateShareMenu,
  setNavigationBarColor: Taro.setNavigationBarColor,
  showShareImageMenu: Taro.showShareImageMenu,
  shareFileMessage: Taro.shareFileMessage,
  shareVideoMessage: Taro.shareVideoMessage,
  vibrateShort: Taro.vibrateShort,
  vibrateLong: Taro.vibrateLong,
  getSetting: Taro.getSetting,
  checkIsSupportFacialRecognition: Taro.checkIsSupportFacialRecognition,
  startFacialRecognitionVerify: Taro.startFacialRecognitionVerify,
  startFacialRecognitionVerifyAndUploadVideo: Taro.startFacialRecognitionVerifyAndUploadVideo,
  requestDeviceVoIP: Taro.requestDeviceVoIP,
  getDeviceVoIPList: Taro.getDeviceVoIPList,
  showRedPackage: Taro.showRedPackage,
  addPhoneContact: Taro.addPhoneContact,
  sendSms: Taro.sendSms,
  setScreenBrightness: Taro.setScreenBrightness,
  getScreenBrightness: Taro.getScreenBrightness,
  setVisualEffectOnCapture: Taro.setVisualEffectOnCapture,
  onScreenRecordingStateChanged: Taro.onScreenRecordingStateChanged,
  offScreenRecordingStateChanged: Taro.offScreenRecordingStateChanged,
  getScreenRecordingState: Taro.getScreenRecordingState,
  shareToWeRun: Taro.shareToWeRun,
  getWeRunData: Taro.getWeRunData,
  canIUse: Taro.canIUse,
  navigateToMiniProgram: Taro.navigateToMiniProgram,
  navigateBackMiniProgram: Taro.navigateBackMiniProgram,
  exitMiniProgram: Taro.exitMiniProgram,
  openEmbeddedMiniProgram: Taro.openEmbeddedMiniProgram,
  setTopBarText: Taro.setTopBarText,
  setTabBarBadge: Taro.setTabBarBadge,
  removeTabBarBadge: Taro.removeTabBarBadge,
  showTabBarRedDot: Taro.showTabBarRedDot,
  hideTabBarRedDot: Taro.hideTabBarRedDot,
  showTabBar: Taro.showTabBar,
  hideTabBar: Taro.hideTabBar,
  setTabBarStyle: Taro.setTabBarStyle,
  setTabBarItem: Taro.setTabBarItem,
  setBackgroundColor: Taro.setBackgroundColor,
  setBackgroundTextStyle: Taro.setBackgroundTextStyle,
  setEnableDebug: Taro.setEnableDebug,
  onUserCaptureScreen: Taro.onUserCaptureScreen,
  offUserCaptureScreen: Taro.offUserCaptureScreen,
  setKeepScreenOn: Taro.setKeepScreenOn,
  checkIsSupportSoterAuthentication: Taro.checkIsSupportSoterAuthentication,
  startSoterAuthentication: Taro.startSoterAuthentication,
  checkIsSoterEnrolledInDevice: Taro.checkIsSoterEnrolledInDevice,
  openBusinessView: Taro.openBusinessView,
  setWindowSize: Taro.setWindowSize,
  setNavigationBarTitle: Taro.setNavigationBarTitle,
  showNavigationBarLoading: Taro.showNavigationBarLoading,
  hideNavigationBarLoading: Taro.hideNavigationBarLoading,
  hideHomeButton: Taro.hideHomeButton,
  startPullDownRefresh: Taro.startPullDownRefresh,
  stopPullDownRefresh: Taro.stopPullDownRefresh,
  getMenuButtonBoundingClientRect: Taro.getMenuButtonBoundingClientRect,
  getSelectedTextRange: Taro.getSelectedTextRange,
  enableAlertBeforeUnload: Taro.enableAlertBeforeUnload,
  disableAlertBeforeUnload: Taro.disableAlertBeforeUnload,
  makeBluetoothPair: Taro.makeBluetoothPair,
  isBluetoothDevicePaired: Taro.isBluetoothDevicePaired,
  openBluetoothAdapter: Taro.openBluetoothAdapter,
  closeBluetoothAdapter: Taro.closeBluetoothAdapter,
  getBluetoothAdapterState: Taro.getBluetoothAdapterState,
  onBluetoothAdapterStateChange: Taro.onBluetoothAdapterStateChange,
  offBluetoothAdapterStateChange: Taro.offBluetoothAdapterStateChange,
  startBluetoothDevicesDiscovery: Taro.startBluetoothDevicesDiscovery,
  stopBluetoothDevicesDiscovery: Taro.stopBluetoothDevicesDiscovery,
  getBluetoothDevices: Taro.getBluetoothDevices,
  getConnectedBluetoothDevices: Taro.getConnectedBluetoothDevices,
  createBLEConnection: Taro.createBLEConnection,
  setBLEMTU: Taro.setBLEMTU,
  getBLEMTU: Taro.getBLEMTU,
  onBLEMTUChange: Taro.onBLEMTUChange,
  offBLEMTUChange: Taro.offBLEMTUChange,
  closeBLEConnection: Taro.closeBLEConnection,
  getBLEDeviceServices: Taro.getBLEDeviceServices,
  getBLEDeviceRSSI: Taro.getBLEDeviceRSSI,
  getBLEDeviceCharacteristics: Taro.getBLEDeviceCharacteristics,
  createBLEPeripheralServer: Taro.createBLEPeripheralServer,
  onBLEPeripheralConnectionStateChanged: Taro.onBLEPeripheralConnectionStateChanged,
  offBLEPeripheralConnectionStateChanged: Taro.offBLEPeripheralConnectionStateChanged,
  notifyBLECharacteristicValueChange: Taro.notifyBLECharacteristicValueChange,
  readBLECharacteristicValue: Taro.readBLECharacteristicValue,
  writeBLECharacteristicValue: Taro.writeBLECharacteristicValue,
  onBluetoothDeviceFound: Taro.onBluetoothDeviceFound,
  offBluetoothDeviceFound: Taro.offBluetoothDeviceFound,
  onBLEConnectionStateChange: Taro.onBLEConnectionStateChange,
  onBLECharacteristicValueChange: Taro.onBLECharacteristicValueChange,
  offBLEConnectionStateChange: Taro.offBLEConnectionStateChange,
  offBLECharacteristicValueChange: Taro.offBLECharacteristicValueChange,
  startBeaconDiscovery: Taro.startBeaconDiscovery,
  stopBeaconDiscovery: Taro.stopBeaconDiscovery,
  getBeacons: Taro.getBeacons,
  onBeaconUpdate: Taro.onBeaconUpdate,
  offBeaconUpdate: Taro.offBeaconUpdate,
  onBeaconServiceChange: Taro.onBeaconServiceChange,
  offBeaconServiceChange: Taro.offBeaconServiceChange,
  startWifi: Taro.startWifi,
  stopWifi: Taro.stopWifi,
  getWifiList: Taro.getWifiList,
  getConnectedWifi: Taro.getConnectedWifi,
  connectWifi: Taro.connectWifi,
  setWifiList: Taro.setWifiList,
  onGetWifiList: Taro.onGetWifiList,
  onWifiConnected: Taro.onWifiConnected,
  onWifiConnectedWithPartialInfo: Taro.onWifiConnectedWithPartialInfo,
  offGetWifiList: Taro.offGetWifiList,
  offWifiConnected: Taro.offWifiConnected,
  offWifiConnectedWithPartialInfo: Taro.offWifiConnectedWithPartialInfo,
  getHCEState: Taro.getHCEState,
  startHCE: Taro.startHCE,
  stopHCE: Taro.stopHCE,
  sendHCEMessage: Taro.sendHCEMessage,
  onHCEMessage: Taro.onHCEMessage,
  offHCEMessage: Taro.offHCEMessage,
  getNFCAdapter: Taro.getNFCAdapter,
  startLocalServiceDiscovery: Taro.startLocalServiceDiscovery,
  stopLocalServiceDiscovery: Taro.stopLocalServiceDiscovery,
  onLocalServiceFound: Taro.onLocalServiceFound,
  offLocalServiceFound: Taro.offLocalServiceFound,
  onLocalServiceLost: Taro.onLocalServiceLost,
  offLocalServiceLost: Taro.offLocalServiceLost,
  onLocalServiceDiscoveryStop: Taro.onLocalServiceDiscoveryStop,
  offLocalServiceDiscoveryStop: Taro.offLocalServiceDiscoveryStop,
  onLocalServiceResolveFail: Taro.onLocalServiceResolveFail,
  offLocalServiceResolveFail: Taro.offLocalServiceResolveFail,
  getLocalIPAddress: Taro.getLocalIPAddress,
  redirectTo: Taro.redirectTo,
  reLaunch: Taro.reLaunch,
  navigateTo: Taro.navigateTo,
  switchTab: Taro.switchTab,
  navigateBack: Taro.navigateBack,
  onAppShow: Taro.onAppShow,
  offAppShow: Taro.offAppShow,
  onAppHide: Taro.onAppHide,
  offAppHide: Taro.offAppHide,
  onError: Taro.onError,
  offError: Taro.offError,
  onUnhandledRejection: Taro.onUnhandledRejection,
  offUnhandledRejection: Taro.offUnhandledRejection,
  getLaunchOptionsSync: Taro.getLaunchOptionsSync,
  getEnterOptionsSync: Taro.getEnterOptionsSync,
  onWindowResize: Taro.onWindowResize,
  offWindowResize: Taro.offWindowResize,
  getBackgroundFetchData: Taro.getBackgroundFetchData,
  onBackgroundFetchData: Taro.onBackgroundFetchData,
  setBackgroundFetchToken: Taro.setBackgroundFetchToken,
  getBackgroundFetchToken: Taro.getBackgroundFetchToken,
  request: Taro.request,
  connectSocket: Taro.connectSocket,
  closeSocket: Taro.closeSocket,
  sendSocketMessage: Taro.sendSocketMessage,
  onSocketOpen: Taro.onSocketOpen,
  onSocketClose: Taro.onSocketClose,
  onSocketMessage: Taro.onSocketMessage,
  onSocketError: Taro.onSocketError,
  uploadFile: Taro.uploadFile,
  downloadFile: Taro.downloadFile,
  chooseImage: Taro.chooseImage,
  previewImage: Taro.previewImage,
  getImageInfo: Taro.getImageInfo,
  saveImageToPhotosAlbum: Taro.saveImageToPhotosAlbum,
  compressImage: Taro.compressImage,
  editImage: Taro.editImage,
  cropImage: Taro.cropImage,
  startRecord: Taro.startRecord,
  stopRecord: Taro.stopRecord,
  playVoice: Taro.playVoice,
  pauseVoice: Taro.pauseVoice,
  stopVoice: Taro.stopVoice,
  chooseVideo: Taro.chooseVideo,
  saveVideoToPhotosAlbum: Taro.saveVideoToPhotosAlbum,
  getVideoInfo: Taro.getVideoInfo,
  compressVideo: Taro.compressVideo,
  loadFontFace: Taro.loadFontFace,
  createMediaContainer: Taro.createMediaContainer,
  createMediaRecorder: Taro.createMediaRecorder,
  createVideoDecoder: Taro.createVideoDecoder,
  openVideoEditor: Taro.openVideoEditor,
  createMediaAudioPlayer: Taro.createMediaAudioPlayer,
  createWebAudioContext: Taro.createWebAudioContext,
  getLocation: Taro.getLocation,
  getFuzzyLocation: Taro.getFuzzyLocation,
  openLocation: Taro.openLocation,
  chooseLocation: Taro.chooseLocation,
  choosePoi: Taro.choosePoi,
  onLocationChange: Taro.onLocationChange,
  offLocationChange: Taro.offLocationChange,
  onLocationChangeError: Taro.onLocationChangeError,
  offLocationChangeError: Taro.offLocationChangeError,
  startLocationUpdateBackground: Taro.startLocationUpdateBackground,
  startLocationUpdate: Taro.startLocationUpdate,
  stopLocationUpdate: Taro.stopLocationUpdate,
  getNetworkType: Taro.getNetworkType,
  onNetworkStatusChange: Taro.onNetworkStatusChange,
  offNetworkStatusChange: Taro.offNetworkStatusChange,
  onNetworkWeakChange: Taro.onNetworkWeakChange,
  offNetworkWeakChange: Taro.offNetworkWeakChange,
  getSystemInfo: Taro.getSystemInfo,
  getSystemInfoSync: Taro.getSystemInfoSync,
  getSystemInfoAsync: Taro.getSystemInfoAsync,
  openSystemBluetoothSetting: Taro.openSystemBluetoothSetting,
  openAppAuthorizeSetting: Taro.openAppAuthorizeSetting,
  getSystemSetting: Taro.getSystemSetting,
  getAppAuthorizeSetting: Taro.getAppAuthorizeSetting,
  getDeviceInfo: Taro.getDeviceInfo,
  getWindowInfo: Taro.getWindowInfo,
  getAppBaseInfo: Taro.getAppBaseInfo,
  getRendererUserAgent: Taro.getRendererUserAgent,
  getBatteryInfo: Taro.getBatteryInfo,
  getBatteryInfoSync: Taro.getBatteryInfoSync,
  startAccelerometer: Taro.startAccelerometer,
  stopAccelerometer: Taro.stopAccelerometer,
  onAccelerometerChange: Taro.onAccelerometerChange,
  offAccelerometerChange: Taro.offAccelerometerChange,
  startCompass: Taro.startCompass,
  stopCompass: Taro.stopCompass,
  onCompassChange: Taro.onCompassChange,
  offCompassChange: Taro.offCompassChange,
  startDeviceMotionListening: Taro.startDeviceMotionListening,
  stopDeviceMotionListening: Taro.stopDeviceMotionListening,
  onDeviceMotionChange: Taro.onDeviceMotionChange,
  offDeviceMotionChange: Taro.offDeviceMotionChange,
  startGyroscope: Taro.startGyroscope,
  stopGyroscope: Taro.stopGyroscope,
  onGyroscopeChange: Taro.onGyroscopeChange,
  offGyroscopeChange: Taro.offGyroscopeChange,
  checkIsOpenAccessibility: Taro.checkIsOpenAccessibility,
  addPhoneCalendar: Taro.addPhoneCalendar,
  addPhoneRepeatCalendar: Taro.addPhoneRepeatCalendar,
  getRandomValues: Taro.getRandomValues,
  getBackgroundAudioManager: Taro.getBackgroundAudioManager,
  getRecorderManager: Taro.getRecorderManager,
  getBackgroundAudioPlayerState: Taro.getBackgroundAudioPlayerState,
  playBackgroundAudio: Taro.playBackgroundAudio,
  pauseBackgroundAudio: Taro.pauseBackgroundAudio,
  seekBackgroundAudio: Taro.seekBackgroundAudio,
  stopBackgroundAudio: Taro.stopBackgroundAudio,
  onBackgroundAudioPlay: Taro.onBackgroundAudioPlay,
  onBackgroundAudioPause: Taro.onBackgroundAudioPause,
  onBackgroundAudioStop: Taro.onBackgroundAudioStop,
  joinVoIPChat: Taro.joinVoIPChat,
  exitVoIPChat: Taro.exitVoIPChat,
  updateVoIPChatMuteConfig: Taro.updateVoIPChatMuteConfig,
  onVoIPChatMembersChanged: Taro.onVoIPChatMembersChanged,
  onVoIPChatSpeakersChanged: Taro.onVoIPChatSpeakersChanged,
  onVoIPChatInterrupted: Taro.onVoIPChatInterrupted,
  offVoIPChatMembersChanged: Taro.offVoIPChatMembersChanged,
  offVoIPChatSpeakersChanged: Taro.offVoIPChatSpeakersChanged,
  offVoIPChatInterrupted: Taro.offVoIPChatInterrupted,
  subscribeVoIPVideoMembers: Taro.subscribeVoIPVideoMembers,
  onVoIPVideoMembersChanged: Taro.onVoIPVideoMembersChanged,
  offVoIPVideoMembersChanged: Taro.offVoIPVideoMembersChanged,
  onVoIPChatStateChanged: Taro.onVoIPChatStateChanged,
  offVoIPChatStateChanged: Taro.offVoIPChatStateChanged,
  join1v1Chat: Taro.join1v1Chat,
  setEnable1v1Chat: Taro.setEnable1v1Chat,
  requestSubscribeMessage: Taro.requestSubscribeMessage,
  requestSubscribeDeviceMessage: Taro.requestSubscribeDeviceMessage,
  login: Taro.login,
  checkSession: Taro.checkSession,
  authorize: Taro.authorize,
  getUserInfo: Taro.getUserInfo,
  getUserProfile: Taro.getUserProfile,
  requestPayment: Taro.requestPayment,
  faceVerifyForPay: Taro.faceVerifyForPay,
  requestOrderPayment: Taro.requestOrderPayment,
  addCard: Taro.addCard,
  openCard: Taro.openCard,
  addFileToFavorites: Taro.addFileToFavorites,
  addVideoToFavorites: Taro.addVideoToFavorites,
  getChannelsShareKey: Taro.getChannelsShareKey,
  scanCode: Taro.scanCode,
  chooseAddress: Taro.chooseAddress,
  openDocument: Taro.openDocument,
  getFileSystemManager: Taro.getFileSystemManager,
  saveFileToDisk: Taro.saveFileToDisk,
  chooseContact: Taro.chooseContact,
  makePhoneCall: Taro.makePhoneCall,
  onPageNotFound: Taro.onPageNotFound,
  offPageNotFound: Taro.offPageNotFound,
  onThemeChange: Taro.onThemeChange,
  offThemeChange: Taro.offThemeChange,
  onCopyUrl: Taro.onCopyUrl,
  offCopyUrl: Taro.offCopyUrl,
  createAnimation: Taro.createAnimation,
  createInnerAudioContext: Taro.createInnerAudioContext,
  getAvailableAudioSources: Taro.getAvailableAudioSources,
  onAudioInterruptionBegin: Taro.onAudioInterruptionBegin,
  offAudioInterruptionBegin: Taro.offAudioInterruptionBegin,
  onAudioInterruptionEnd: Taro.onAudioInterruptionEnd,
  offAudioInterruptionEnd: Taro.offAudioInterruptionEnd,
  setInnerAudioOption: Taro.setInnerAudioOption,
  createCameraContext: Taro.createCameraContext,
  createLivePusherContext: Taro.createLivePusherContext,
  hideKeyboard: Taro.hideKeyboard,
  onKeyboardHeightChange: Taro.onKeyboardHeightChange,
  offKeyboardHeightChange: Taro.offKeyboardHeightChange,
  showModal: Taro.showModal,
  showToast: Taro.showToast,
  hideToast: Taro.hideToast,
  showLoading: Taro.showLoading,
  hideLoading: Taro.hideLoading,
  showActionSheet: Taro.showActionSheet,
  reportAnalytics: Taro.reportAnalytics,
  reportMonitor: Taro.reportMonitor,
  getClipboardData: Taro.getClipboardData,
  setClipboardData: Taro.setClipboardData,
  createSelectorQuery: Taro.createSelectorQuery,
  createIntersectionObserver: Taro.createIntersectionObserver,
  createMediaQueryObserver: Taro.createMediaQueryObserver,
  nextTick: Taro.nextTick,
  onMemoryWarning: Taro.onMemoryWarning,
  offMemoryWarning: Taro.offMemoryWarning,
  reportPerformance: Taro.reportPerformance,
  getPerformance: Taro.getPerformance,
  getUpdateManager: Taro.getUpdateManager,
  updateWeChatApp: Taro.updateWeChatApp,
  createWorker: Taro.createWorker,
  faceDetect: Taro.faceDetect,
  initFaceDetect: Taro.initFaceDetect,
  stopFaceDetect: Taro.stopFaceDetect,
  createBufferURL: Taro.createBufferURL,
  revokeBufferURL: Taro.revokeBufferURL,
  createUDPSocket: Taro.createUDPSocket,
  createTCPSocket: Taro.createTCPSocket,
  env: Taro.env,
  createRewardedVideoAd: Taro.createRewardedVideoAd,
  createInterstitialAd: Taro.createInterstitialAd,
  getLogManager: Taro.getLogManager,
  getRealtimeLogManager: Taro.getRealtimeLogManager,
  getExptInfoSync: Taro.getExptInfoSync,
  getCommonConfig: Taro.getCommonConfig,
  reportEvent: Taro.reportEvent,
  getChannelsLiveInfo: Taro.getChannelsLiveInfo,
  getChannelsLiveNoticeInfo: Taro.getChannelsLiveNoticeInfo,
  openChannelsLive: Taro.openChannelsLive,
  openChannelsActivity: Taro.openChannelsActivity,
  openChannelsUserProfile: Taro.openChannelsUserProfile,
  openChannelsEvent: Taro.openChannelsEvent,
  reserveChannelsLive: Taro.reserveChannelsLive,
  getGroupEnterInfo: Taro.getGroupEnterInfo,
  preloadWebview: Taro.preloadWebview,
  preloadSkylineView: Taro.preloadSkylineView,
  getSkylineInfo: Taro.getSkylineInfo,
  getSkylineInfoSync: Taro.getSkylineInfoSync,
  createVKSession: Taro.createVKSession,
  isVKSupport: Taro.isVKSupport,
  createCacheManager: Taro.createCacheManager,
  chooseLicensePlate: Taro.chooseLicensePlate,
  createInferenceSession: Taro.createInferenceSession,
  preloadAssets: Taro.preloadAssets,
  cloud: Taro.cloud,
  checkIsPictureInPictureActive: Taro.checkIsPictureInPictureActive,
  getUserCryptoManager: Taro.getUserCryptoManager,
  checkIsAddedToMyMiniProgram: Taro.checkIsAddedToMyMiniProgram,
  getInferenceEnvInfo: Taro.getInferenceEnvInfo,
};

Object.assign(window, {
  _,
  React,
  ReactDOM,
  Taro: Object.assign({}, Taro, weappApi),
  TaroComponents,
  TaroUI
});

const { useEffect, useState } = React;

interface Props {
  component?: JSXElementConstructor<any>
}

export default function Index() {
  const [props, setProps] = useState<Props>({
    //@ts-ignore
    component: window.$$currentWebPackagePageComponent$$
  });
  useEffect(() => {
    document.addEventListener('web-package-page-change', (e: CustomEvent) => {
      setProps({ component: e?.detail?.component });
    });
  }, []);
  const MyComponent = props?.component;
  return MyComponent ? <MyComponent /> : null;
};
